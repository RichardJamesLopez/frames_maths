// src/utils.ts
import { Message } from "@farcaster/core";
function isFrameButtonLink(frameButton) {
  return frameButton.action === "link";
}
function bytesToHexString(bytes) {
  return "0x" + Buffer.from(bytes).toString("hex");
}
function getByteLength(str) {
  return Buffer.from(str).byteLength;
}
function hexStringToUint8Array(hexstring) {
  return new Uint8Array(
    hexstring.match(/.{1,2}/g).map((byte) => parseInt(byte, 16))
  );
}
function normalizeCastId(castId) {
  return {
    fid: castId.fid,
    hash: bytesToHexString(castId.hash)
  };
}
function getFrameMessageFromRequestBody(body) {
  return Message.decode(
    Buffer.from(body?.trustedData?.messageBytes ?? "", "hex")
  );
}
function isValidVersion(version) {
  if (version === "vNext") {
    return true;
  }
  const pattern = /^\d{4}-\d{2}-\d{2}$/;
  if (!pattern.test(version)) {
    return false;
  }
  return true;
}

export {
  isFrameButtonLink,
  bytesToHexString,
  getByteLength,
  hexStringToUint8Array,
  normalizeCastId,
  getFrameMessageFromRequestBody,
  isValidVersion
};
