"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/getTokenUrl.ts
var getTokenUrl_exports = {};
__export(getTokenUrl_exports, {
  getTokenUrl: () => getTokenUrl
});
module.exports = __toCommonJS(getTokenUrl_exports);
function getTokenUrl({
  address,
  tokenId,
  chainNamespace = "eip155",
  chain: chainArg,
  chainId: chainIdArg
}) {
  let chainId = null;
  if (chainIdArg) {
    chainId = chainIdArg.toString();
  } else if (chainArg) {
    chainId = chainArg.id.toString();
  }
  if (!chainId) {
    throw new Error("Invalid chainName or chain object");
  }
  return `${chainNamespace ? `${chainNamespace}:` : ""}${chainId}:${address}${tokenId ? `:${tokenId}` : ""}`;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getTokenUrl
});
