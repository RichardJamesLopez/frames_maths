// src/getAddressForFid.ts
import { createPublicClient, http, parseAbi } from "viem";
import { optimism } from "viem/chains";
async function getAddressForFid({
  fid,
  options = {}
}) {
  const optionsOrDefaults = {
    fallbackToCustodyAddress: options.fallbackToCustodyAddress ?? true,
    hubHttpUrl: options.hubHttpUrl ?? "https://nemes.farcaster.xyz:2281",
    hubRequestOptions: options.hubRequestOptions ?? {}
  };
  const verificationsResponse = await fetch(
    `${optionsOrDefaults.hubHttpUrl}/v1/verificationsByFid?fid=${fid}`,
    optionsOrDefaults.hubRequestOptions
  );
  const { messages } = await verificationsResponse.json();
  if (messages[0]) {
    const {
      data: {
        verificationAddEthAddressBody: { address }
      }
    } = messages[0];
    return address;
  } else if (optionsOrDefaults.fallbackToCustodyAddress) {
    const publicClient = createPublicClient({
      transport: http(),
      chain: optimism
    });
    const address = await publicClient.readContract({
      abi: parseAbi(["function custodyOf(uint256 fid) view returns (address)"]),
      // IdRegistry contract address
      address: "0x00000000fc6c5f01fc30151999387bb99a9f489b",
      functionName: "custodyOf",
      args: [BigInt(fid)]
    });
    return address;
  } else {
    return null;
  }
}

export {
  getAddressForFid
};
