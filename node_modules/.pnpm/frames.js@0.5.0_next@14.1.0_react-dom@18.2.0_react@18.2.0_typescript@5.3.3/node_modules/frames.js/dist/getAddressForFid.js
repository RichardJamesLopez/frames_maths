"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/getAddressForFid.ts
var getAddressForFid_exports = {};
__export(getAddressForFid_exports, {
  getAddressForFid: () => getAddressForFid
});
module.exports = __toCommonJS(getAddressForFid_exports);
var import_viem = require("viem");
var import_chains = require("viem/chains");
async function getAddressForFid({
  fid,
  options = {}
}) {
  const {
    fallbackToCustodyAddress = true,
    hubHttpUrl = "https://api.neynar.com:2281",
    hubRequestOptions = {
      headers: {
        api_key: "NEYNAR_FRAMES_JS"
      }
    }
  } = options;
  const verificationsResponse = await fetch(
    `${hubHttpUrl}/v1/verificationsByFid?fid=${fid}`,
    hubRequestOptions
  );
  const { messages } = await verificationsResponse.json();
  if (messages[0]) {
    const {
      data: {
        verificationAddEthAddressBody: { address }
      }
    } = messages[0];
    return address;
  } else if (fallbackToCustodyAddress) {
    const publicClient = (0, import_viem.createPublicClient)({
      transport: (0, import_viem.http)(),
      chain: import_chains.optimism
    });
    const address = await publicClient.readContract({
      abi: (0, import_viem.parseAbi)(["function custodyOf(uint256 fid) view returns (address)"]),
      // IdRegistry contract address
      address: "0x00000000fc6c5f01fc30151999387bb99a9f489b",
      functionName: "custodyOf",
      args: [BigInt(fid)]
    });
    return address;
  } else {
    return null;
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getAddressForFid
});
