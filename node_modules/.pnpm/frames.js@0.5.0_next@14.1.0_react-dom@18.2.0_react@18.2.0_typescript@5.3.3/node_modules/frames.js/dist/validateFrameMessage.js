"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/validateFrameMessage.ts
var validateFrameMessage_exports = {};
__export(validateFrameMessage_exports, {
  validateFrameMessage: () => validateFrameMessage
});
module.exports = __toCommonJS(validateFrameMessage_exports);

// src/getAddressForFid.ts
var import_viem = require("viem");
var import_chains = require("viem/chains");

// src/getUserDataForFid.ts
var import_core = require("@farcaster/core");

// src/validateFrame.ts
var cheerio = __toESM(require("cheerio"));

// src/utils.ts
var import_core2 = require("@farcaster/core");
function hexStringToUint8Array(hexstring) {
  return new Uint8Array(
    hexstring.match(/.{1,2}/g).map((byte) => parseInt(byte, 16))
  );
}

// src/getFrameMessage.ts
var import_core3 = require("@farcaster/core");

// src/validateFrameMessage.ts
var import_core4 = require("@farcaster/core");
async function validateFrameMessage(body, {
  hubHttpUrl = "https://api.neynar.com:2281",
  hubRequestOptions = {
    headers: {
      api_key: "NEYNAR_FRAMES_JS"
    }
  }
} = {}) {
  const { headers, ...rest } = hubRequestOptions;
  const validateMessageResponse = await fetch(
    `${hubHttpUrl}/v1/validateMessage`,
    {
      method: "POST",
      headers: {
        "Content-Type": "application/octet-stream",
        ...headers
      },
      body: hexStringToUint8Array(body.trustedData.messageBytes),
      ...rest
    }
  );
  const validateMessageJson = await validateMessageResponse.json();
  if (validateMessageJson.valid) {
    return {
      isValid: true,
      message: import_core4.Message.fromJSON(
        validateMessageJson.message
      )
    };
  } else {
    return {
      isValid: false,
      message: void 0
    };
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  validateFrameMessage
});
