// src/getFrameHtml.ts
function getFrameHtml(frame, options = {}) {
  const html = `<!DOCTYPE html>
  <html>
    <head>
      ${options.title ? `<title>${options.title}</title>` : ""}
      ${options.og?.title ? `<meta property="og:title" content="${options.og.title}"/>` : ""}
      ${getFrameHtmlHead(frame)}
      ${options.htmlHead || ""}
    </head>
    <body>${options.htmlBody ? options.htmlBody : ""}</body>
  </html>`;
  return html;
}
function getFrameHtmlHead(frame) {
  const tags = [
    `<meta name="og:image" content="${frame.ogImage || frame.image}"/>`,
    `<meta name="fc:frame" content="${frame.version}"/>`,
    `<meta name="fc:frame:image" content="${frame.image}"/>`,
    `<meta name="fc:frame:post_url" content="${frame.postUrl}"/>`,
    frame.inputText ? `<meta name="fc:frame:input:text" content="${frame.inputText}"/>` : "",
    ...frame.buttons?.flatMap((button, index) => [
      `<meta name="fc:frame:button:${index + 1}" content="${button.label}"/>`,
      button.action ? `<meta name="fc:frame:button:${index + 1}:action" content="${button.action}"/>` : "",
      button.target ? `<meta name="fc:frame:button:${index + 1}:target" content="${button.target}"/>` : ""
    ]) ?? []
  ];
  return tags.join("");
}

export {
  getFrameHtml,
  getFrameHtmlHead
};
