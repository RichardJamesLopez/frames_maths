import { HubHttpUrlOptions, FrameActionDataParsed, FrameActionHubContext, FrameActionPayload } from './types.mjs';

type GetFrameMessageOptions = {
    fetchHubContext?: boolean;
} & HubHttpUrlOptions;
type FrameMessageReturnType<T extends GetFrameMessageOptions> = T["fetchHubContext"] extends true ? FrameActionDataParsed & FrameActionHubContext : FrameActionDataParsed;
/** Returns a `FrameActionData` object from the message trusted data. (e.g. button index, input text). The `fetchHubContext` option (default: true) determines whether to validate and fetch other metadata from hubs.
 * If `isValid` is false, the message should not be trusted.
 */
declare function getFrameMessage<T extends GetFrameMessageOptions>(payload: FrameActionPayload, options?: T): Promise<FrameMessageReturnType<T>>;

export { type FrameMessageReturnType as F, type GetFrameMessageOptions as G, getFrameMessage as g };
